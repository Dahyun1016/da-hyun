# 8-1 다양한 브랜치 병합

## 브랜치 병합 개요

브랜치 병합

병합(merge)

- 두 개의 브랜치를 하나로 모으는 과정
- fast-forward(빨리 감기) 병합
- 3-awy 병합

빨리감기 fast-forward 병합의 이해

- fast-forward 병합 조건
- 현재 브랜치 master 가 병합할 대상 커밋의 직접적인 뿌리가 되는 경우
- 간단히 두 브랜치가 일렬 상태
- bugfix 브랜치 이력이 master 브랜치 이력을 모두 포함하는 경우
- 브랜치 master에서 병합
- git merge bugfix

fast-forward 병합 수행

master 브랜치는 단순히 이동

기준 브랜치 master

3-way 상태 : 두 분기가 갈라진 상태

두 브랜치의 조상이 같은 경우

- master 브랜치 내의 변경 내용과 bugfix 브랜치 내의 변경 내용을 하나로 통합할 필요

3-way 병합

- 새로운 커밋을 사용하여 두 기록을 합침

3-way 병합 수행

새로운 커밋 E 생성

- 두 브랜치의 변경을 가져온 ‘merge commit’병합 커밋 E를 생성
- 병합 완료 후, 통합 브랜치인 ‘master’ 브랜치로 통합된 이력이 생성

$ git merge bugfix [ -m이 없으면 메시지 입력할 기본 편집기 실행 ]

$ git merge bugfix -m ‘merge msg’

기본이 fast-forward 상태에서 non fast-forward 병합

마스터에서 dev1을 fast forward로 병합

- git merge dev1
- 일렬병합

마스터에서 dev1을 non fast forward로 병합(3-way 병합)

- 옵션 —no-ff
- git merge dev1 —no-ff

## 병합의 다양한 옵션

‘non fast forward’ 병합 옵션을 지정

non fast forward 병합

- git merge —no-ff {병합할 브랜치 명}

병합 실행 시에 ‘fast-forward 병합’이 가능한 경우라도 3-way병합을 수행

- 병합된 브랜치가 그대로 남기 때문에
- → 그 브랜치로 실행한 작업 확인 및 브랜치 관리 면에서 더 유용

병합의 다양한 옵션 종류

$ git merge {병합할 브랜치 명}

- 보통의 병합, 융통성 있는 병합
- 현 브랜치와 병합할 브랜치가 일렬 상태
- fast - forward 병합
- → 새로운 병합 커밋 없이 병합할 브랜치 커밋으로 이동
- 현 브랜치와 병합할 브랜치가 갈라져 있는 상태
- 3-way 병합
- → 새로운 병합 커밋을 생성해 두 브랜치를 합침

$ git merge —no-ff {병합할 브랜치 명}

- 무조건 3-way 병합되는 옵션

$ git merge —ff-only {병합할 브랜치 명}

- 상태가 fast forward인 일렬 상태에서만 병합 진행

$ git merge—squash {병합할 브랜치 명}

- 현재 브랜치에 병합 대상과의 합치는 커밋을 하나 생성해 병합
- → 병합되는 브랜치는 사용하지 않고 그대로 남음

옵션 —squash

강압적인 병합

- git merge —squash hotfix
- 커밋 이력과 병합되는 브랜치 이력도 남기지 않음
- 새로운 커밋에 상대 브랜치의 내용을 모두 합해 새로운 커밋으로 병합

---

# 8-3 병합 충돌과 해결

## 병합 충돌

병합 충돌(conflict) 이해

3-way 상태에서 두 브랜치의 동일 조상인 커밋1을 기준

- 병합할 두 브랜치 마지막 커밋을 비교

충돌의 기준

- 파일 충돌 없음
- 수정 되지 않거나 한쪽 브랜치에서만 수정되면

- 파일 충돌 발생
- 두 브랜치 모두에서 변경 사항이 달리 발생한 파일

충돌 해결

충돌이 발생하면 해당 파일의 충돌을 먼저 해결

- 충돌 해결
- 직접 파일 내용을 수정 후 저장
- 계속해서 add,commit 진행
- 필요하면 합병된 이전 브랜치 삭제

충돌 발생 코드 표시

충돌한 파일 내부 표시 - 3개의 표시로 구분

- <<<<<<<< HEAD
- →  현재 브랜치 HEAD의 수정 내용
- ===========
- → 병합되는 브랜치 feat/list 의 수정 내용 (밑에꺼)
- >>>>>>>>feat / list

수정 후 3개의 표시는 모두 삭제

## 충돌 해결

병합 취소 후 다시 병합

병합 취소

- git merge —abort

다시 병합

- git merge feat / list

직접 수정 후 저장

- 충돌 표시 모두 제거

추가,커밋 다시

- git commit -am ‘Resolve conflict, main’
